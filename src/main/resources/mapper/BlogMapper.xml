<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blue.mapper.BlogMapper">

    <!--根据id获取文章-->
    <select id="getBlogByID" parameterType="long" resultMap="BlogMap">
        select id,title,content,first_picture,likes,
        flag,view,description,appreciation,share_statement,commentabled,published,
        recommend, create_time ,update_time
         ,type_id from t_blog where id=#{id};
    </select>

    <!--给前端页面显示的博客文章:已发布的-->
    <select id="listBlogOnFront" resultMap="BlogMap">
        select id,title,content,first_picture,likes,
        flag,view,description,appreciation,share_statement,commentabled,published,
        recommend, create_time ,update_time
        ,type_id from t_blog
        <where>
            and published = true
            <if test="title != null and title != ''">
                and title like concat('%',#{title},'%')
            </if>

            <if test="recommend != null and recommend != ''">
                and recommend = #{recommend}
            </if>

            <if test="typeId != null and typeId != ''">
                and type_id = #{typeId}
            </if>

        </where>
        order by update_time DESC
    </select>

    <!--给前端页面显示的博客文章:热门的前五-->
    <select id="listBlogOnFrontHot" resultMap="BlogMap">
        select id,title,content,first_picture,likes,
        flag,view,description,appreciation,share_statement,commentabled,published,
        recommend, create_time ,update_time
        ,type_id from t_blog
        <where>
            and published = true
        </where>
        order by view DESC limit 0,5
    </select>


    <!--后台获取博客信息-->
    <select id="listBlog" resultMap="BlogMap">
        select id,title,content,first_picture,likes,
        flag,view,description,appreciation,share_statement,commentabled,published,
        recommend, create_time ,update_time
        ,type_id from t_blog
        <where>


            <if test="title != null and title != ''">
                and title like concat('%',#{title},'%')
            </if>

            <if test="recommend != null and recommend != ''">
                and recommend = #{recommend}
            </if>

            <if test="typeId != null and typeId != ''">
                and type_id = #{typeId}
            </if>

        </where>
        order by update_time DESC
    </select>

<!--    这两个sql写在这里是啥意思？？？-->
    <select id="getType" resultType="Type">
        select * from t_type where id=#{id};
    </select>
    <select id="getUser" resultType="User">
        select * from t_user where id=#{id};
    </select>

    <resultMap id="BlogMap" type="Blog">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="view" column="view"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="likes" column="likes"/>


        <association property="type" column="type_id" javaType="Type" select="getType">
            <result property="name" column="name"/>
        </association>

    </resultMap>


    <!--useGeneratedKeys="true" keyProperty="id" 这两个属性会返回id主键的值-->
    <insert id="save" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog(id,title,content,first_picture,likes,
        flag,view,description,appreciation,share_statement,commentabled,published,
        recommend,create_time,update_time,type_id,user_id) values (#{id},
        #{title},#{content},#{firstPicture},#{likes},#{flag},#{view},#{description},#{appreciation},#{shareStatement},
        #{commentabled},#{published},#{recommend},#{createTime},#{updateTime},#{type.id},#{user.id}
        );
    </insert>

    <update id="incView" parameterType="Blog">
        update t_blog set
        view = view + 1
        where id =#{id}
    </update>

    <update id="incLikes" parameterType="Blog">
        update t_blog set
        likes = likes + #{likes}
        where id =#{id}
    </update>

    <update id="updateBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        update t_blog set title = #{title},content = #{content},first_picture=#{firstPicture},description=#{description},
        flag = #{flag},view = #{view},appreciation=#{appreciation},share_statement=#{shareStatement},
        commentabled=#{commentabled},published=#{published},recommend=#{recommend},create_time=#{createTime},
        update_time=#{updateTime},type_id=#{type.id},user_id=#{user.id} where id = #{id};
    </update>

    <delete id="deleteBlog" parameterType="long">
        delete from t_blog where id=#{id}
    </delete>

    <resultMap id="firstPageBlog" type="com.blue.po.vo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="view" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>

        <result property="typeName" column="name"/>

        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>
    <select id="getFirstPageBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.view,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <!--搜索文章-->
    <select id="getSearchBlog" resultMap="firstPageBlog">
        <bind name="pattern" value="'%' + title + '%'" />
        select b.id,b.title,b.first_picture, b.view,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from t_blog b, t_user u, t_type t
        where b.type_id = t.id and u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>

    <!--分类页面查询-->
    <select id="getByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.view, b.comment_count, b.update_time, b.description,
        t.name ,
        u.nickname, u.avatar
        from t_blog b, t_type t,t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId} order by b.update_time desc
    </select>
    <!--查询所有文章-->
    <select id="getAllBlog" resultType="com.blue.po.Blog">
        select * from myblog.t_blog
    </select>

    <!--查询文章管理列表-->
    <select id="getAllBlogQuery" resultMap="blog">
        select b.id,b.title,b.update_time,b.recommend,b.published,b.type_id,t.id,t.name from t_blog b left outer join
        t_type t on b.type_id = t.id order by b.update_time desc
    </select>

    <resultMap id="blog" type="com.blue.po.vo.BlogQuery2">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="com.blue.po.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>


    <resultMap id="detailedBlog" type="com.blue.po.vo.DetailedBlog">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeName" column="name"/>
        <result property="view" column="views"/>
<!--        <result property="commentCount" column="comment_count"/>-->
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>


    <!--博客详情查询-->
    <select id="getDetailedBlog" resultMap="detailedBlog">
        select b.id bid,b.first_picture,b.flag,b.title,b.content,b.view,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name
        from t_blog b,t_user u, t_type t
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>

    <!--查询出文章评论数量并更新-->
    <update id="getCommentCountById" parameterType="com.blue.po.Blog">
        update t_blog b set b.comment_count = (
        select count(*) from t_comment c where c.blog_id = #{id} and b.id = #{id}
        ) WHERE b.id = #{id}
    </update>

    <!--文章访问自增-->
    <update id="updateViews" parameterType="com.blue.po.Blog">
        update t_blog b set b.view = b.view+1 where b.id = #{id}
    </update>

</mapper>
